Key Path : RoR2/Base/Drones/Drone1Broken.prefab | UnityObject Type : UnityEngine.GameObject | UnityObject Name : Drone1Broken

> transform = p: (78.2, -115.3, 6.7) r: (0.0, 0.0, 0.0) s: (1.0, 1.0, 1.0)
> UnityEngine.Networking.NetworkIdentity
>v m_SceneId = 0
>v m_AssetId = 7aa89190b9b642148848a10986cda9d0
>v m_ServerOnly = False
>v m_LocalPlayerAuthority = False
>v m_IsClient = False
>v m_IsServer = False
>v m_HasAuthority = False
>v m_NetId = 0
>v m_IsLocalPlayer = False
>v m_ConnectionToServer = 
>v m_ConnectionToClient = 
>v m_PlayerId = -1
>v m_NetworkBehaviours = 
>v m_ObserverConnections = 
>v m_Observers = 
>v m_ClientAuthorityOwner = 
>v m_Reset = False
>v s_NextNetworkId = 1
>v s_UpdateWriter = UnityEngine.Networking.NetworkWriter
>v clientAuthorityCallback = 
>v onNetworkIdAssigned = 
>v onStartServerGlobal = 
>v isClient = False
>v isServer = False
>v hasAuthority = False
>v netId = 0
>v sceneId = 0
>v serverOnly = False
>v localPlayerAuthority = False
>v clientAuthorityOwner = 
>v assetId = 7aa89190b9b642148848a10986cda9d0
>v isLocalPlayer = False
>v playerControllerId = -1
>v connectionToServer = 
>v connectionToClient = 
>v observers = 

> RoR2.Highlight
>v highlightList = System.Collections.Generic.List`1[RoR2.Highlight]
>v _readonlyHighlightList = System.Collections.ObjectModel.ReadOnlyCollection`1[RoR2.Highlight]
>v displayNameProvider = 
>v pickupIndex = ItemTier.Boss
>v targetRenderer = Drone1Mesh (UnityEngine.MeshRenderer)
>v strength = 1
>v highlightColor = interactive
>v isOn = False
>v readonlyHighlightList = System.Collections.ObjectModel.ReadOnlyCollection`1[RoR2.Highlight]

> RoR2.SummonMasterBehavior
>v masterPrefab = Drone1Master (UnityEngine.GameObject)
>v callOnEquipmentSpentOnPurchase = False
>v destroyAfterSummoning = True

> RoR2.PurchaseInteraction
>v displayNameToken = DRONE_GUNNER_INTERACTABLE_NAME
>v contextToken = DRONE_GUNNER_CONTEXT
>v costType = Money
>v available = True
>v cost = 40
>v automaticallyScaleCostWithDifficulty = False
>v requiredUnlockable = 
>v ignoreSpherecastForInteractability = False
>v purchaseStatNames = System.String[]
>v setUnavailableOnTeleporterActivated = False
>v isShrine = False
>v isGoldShrine = False
>v lastActivator = 
>v lockGameObject = 
>v rng = 
>v sharedStringBuilder = 
>v onItemSpentOnPurchase = 
>v onEquipmentSpentOnPurchase = 
>v onPurchase = RoR2.PurchaseEvent RoR2.PurchaseEvent
>v ___lockGameObjectNetId = 0
>v NetworkdisplayNameToken = DRONE_GUNNER_INTERACTABLE_NAME
>v NetworkcontextToken = DRONE_GUNNER_CONTEXT
>v Networkavailable = True
>v Networkcost = 40
>v NetworklockGameObject = 

> RoR2.EventFunctions

> RoR2.Hologram.HologramProjector
>v displayDistance = 15
>v hologramPivot = HologramPivot (UnityEngine.Transform)
>v disableHologramRotation = False
>v transformDampVelocity = 0
>v contentProvider = 
>v viewerReselectTimer = 0
>v viewerReselectInterval = 0,25
>v cachedViewer = 
>v viewer = 
>v hologramContentInstance = 

> RoR2.GenericDisplayNameProvider
>v displayToken = DRONE1_NAME

> RoR2.ModelLocator
>v _modelTransform = mdlDrone1 (UnityEngine.Transform)
>v modelDestructionNotifier = 
>v modelBaseTransform = ModelBase (UnityEngine.Transform)
>v onModelChanged = 
>v autoUpdateModelTransform = False
>v dontDetatchFromParent = True
>v modelParentTransform = 
>v noCorpse = False
>v dontReleaseModelOnDeath = False
>v preserveModel = False
>v normalizeToFloor = False
>v normalSmoothdampTime = 0,1
>v normalMaxAngleDelta = 90
>v normalSmoothdampVelocity = (0.0, 0.0, 0.0)
>v targetNormal = (0.0, 1.0, 0.0)
>v currentNormal = (0.0, 1.0, 0.0)
>v characterMotor = 
>v modelTransform = mdlDrone1 (UnityEngine.Transform)

>GameObject Children 0 ModelBase

>> transform = p: (0.0, 0.0, 0.0) r: (0.0, 0.0, 0.0) s: (0.3, 0.3, 0.3)
>>GameObject Children 0 mdlDrone1

>>> transform = p: (-1.6, 2.8, -0.1) r: (322.6, 36.9, 35.8) s: (1.0, 1.0, 1.0)
>>> RoR2.EntityLocator
>>>v entity = Drone1Broken (UnityEngine.GameObject)

>>>GameObject Children 0 Drone1Mesh

>>>> transform = p: (0.0, 0.0, 0.0) r: (319.9, 266.8, 142.6) s: (1.0, 1.0, 1.0)
>>>> UnityEngine.SphereCollider
>>>>v center = (0.0, 0.0, -2.1)
>>>>v radius = 2,6

>>>> RoR2.EntityLocator
>>>>v entity = Drone1Broken (UnityEngine.GameObject)

>>>> UnityEngine.MeshRenderer
>>>>v additionalVertexStreams = 
>>>>v subMeshStartIndex = 0

>>>> UnityEngine.MeshFilter
>>>>v sharedMesh = Drone1Mesh (UnityEngine.Mesh)
>>>>v mesh = Drone1Mesh Instance (UnityEngine.Mesh)

>>>GameObject Children 1 Drone1BladeMesh

>>>> transform = p: (0.0, 0.0, 0.0) r: (319.9, 266.8, 142.6) s: (1.0, 1.0, 1.0)
>>>> RoR2.EntityLocator
>>>>v entity = 

>>>> UnityEngine.MeshRenderer
>>>>v additionalVertexStreams = 
>>>>v subMeshStartIndex = 0

>>>> UnityEngine.MeshFilter
>>>>v sharedMesh = Drone1BladeMesh (UnityEngine.Mesh)
>>>>v mesh = Drone1BladeMesh Instance (UnityEngine.Mesh)

>>GameObject Children 1 BrokenDroneVFX

>>> transform = p: (0.0, 0.0, 0.0) r: (0.0, 0.0, 0.0) s: (1.0, 1.0, 1.0)
>>>GameObject Children 0 Small Sparks, Mesh

>>>> transform = p: (0.0, 0.0, 0.0) r: (270.0, 0.0, 0.0) s: (1.0, 1.0, 1.0)
>>>> UnityEngine.ParticleSystem
>>>>v startDelay = 0
>>>>v loop = True
>>>>v playOnAwake = True
>>>>v duration = 1
>>>>v playbackSpeed = 1
>>>>v enableEmission = True
>>>>v emissionRate = 10
>>>>v startSpeed = 3
>>>>v startSize = 0,3
>>>>v startColor = RGBA(1.000, 0.457, 0.000, 1.000)
>>>>v startRotation = 0
>>>>v startRotation3D = (0.0, 0.0, 0.0)
>>>>v startLifetime = 0,1
>>>>v gravityModifier = 0,3
>>>>v maxParticles = 1000
>>>>v simulationSpace = Local
>>>>v scalingMode = Local
>>>>v automaticCullingEnabled = True
>>>>v isPlaying = False
>>>>v isEmitting = False
>>>>v isStopped = True
>>>>v isPaused = False
>>>>v particleCount = 0
>>>>v time = 0
>>>>v randomSeed = 0
>>>>v useAutoRandomSeed = True
>>>>v proceduralSimulationSupported = True
>>>>v main = UnityEngine.ParticleSystem+MainModule
>>>>v emission = UnityEngine.ParticleSystem+EmissionModule
>>>>v shape = UnityEngine.ParticleSystem+ShapeModule
>>>>v velocityOverLifetime = UnityEngine.ParticleSystem+VelocityOverLifetimeModule
>>>>v limitVelocityOverLifetime = UnityEngine.ParticleSystem+LimitVelocityOverLifetimeModule
>>>>v inheritVelocity = UnityEngine.ParticleSystem+InheritVelocityModule
>>>>v forceOverLifetime = UnityEngine.ParticleSystem+ForceOverLifetimeModule
>>>>v colorOverLifetime = UnityEngine.ParticleSystem+ColorOverLifetimeModule
>>>>v colorBySpeed = UnityEngine.ParticleSystem+ColorBySpeedModule
>>>>v sizeOverLifetime = UnityEngine.ParticleSystem+SizeOverLifetimeModule
>>>>v sizeBySpeed = UnityEngine.ParticleSystem+SizeBySpeedModule
>>>>v rotationOverLifetime = UnityEngine.ParticleSystem+RotationOverLifetimeModule
>>>>v rotationBySpeed = UnityEngine.ParticleSystem+RotationBySpeedModule
>>>>v externalForces = UnityEngine.ParticleSystem+ExternalForcesModule
>>>>v noise = UnityEngine.ParticleSystem+NoiseModule
>>>>v collision = UnityEngine.ParticleSystem+CollisionModule
>>>>v trigger = UnityEngine.ParticleSystem+TriggerModule
>>>>v subEmitters = UnityEngine.ParticleSystem+SubEmittersModule
>>>>v textureSheetAnimation = UnityEngine.ParticleSystem+TextureSheetAnimationModule
>>>>v lights = UnityEngine.ParticleSystem+LightsModule
>>>>v trails = UnityEngine.ParticleSystem+TrailModule
>>>>v customData = UnityEngine.ParticleSystem+CustomDataModule

>>>> UnityEngine.ParticleSystemRenderer
>>>>v alignment = View
>>>>v renderMode = Stretch
>>>>v sortMode = None
>>>>v lengthScale = 2
>>>>v velocityScale = 0
>>>>v cameraVelocityScale = 0
>>>>v normalDirection = 1
>>>>v shadowBias = 0
>>>>v sortingFudge = 0
>>>>v minParticleSize = 0
>>>>v maxParticleSize = 0,5
>>>>v pivot = (0.0, 0.0, 0.0)
>>>>v flip = (0.0, 0.0, 0.0)
>>>>v maskInteraction = None
>>>>v trailMaterial = 
>>>>v enableGPUInstancing = True
>>>>v allowRoll = True
>>>>v mesh = 
>>>>v meshCount = 0
>>>>v activeVertexStreamsCount = 4

>>>GameObject Children 1 Damage Point

>>>> transform = p: (0.0, -0.4, 0.0) r: (30.3, 336.1, 279.7) s: (1.0, 1.0, 1.0)
>>>>GameObject Children 0 Small Sparks, Point

>>>>> transform = p: (0.0, 0.0, 0.0) r: (351.6, 61.1, 300.7) s: (1.0, 1.0, 1.0)
>>>>> UnityEngine.ParticleSystem
>>>>>v startDelay = 0
>>>>>v loop = True
>>>>>v playOnAwake = True
>>>>>v duration = 1
>>>>>v playbackSpeed = 1
>>>>>v enableEmission = True
>>>>>v emissionRate = 0
>>>>>v startSpeed = 3
>>>>>v startSize = 0,1
>>>>>v startColor = RGBA(1.000, 0.457, 0.000, 1.000)
>>>>>v startRotation = 0
>>>>>v startRotation3D = (0.0, 0.0, 0.0)
>>>>>v startLifetime = 0,6
>>>>>v gravityModifier = 0,3
>>>>>v maxParticles = 1000
>>>>>v simulationSpace = Local
>>>>>v scalingMode = Local
>>>>>v automaticCullingEnabled = False
>>>>>v isPlaying = False
>>>>>v isEmitting = False
>>>>>v isStopped = True
>>>>>v isPaused = False
>>>>>v particleCount = 0
>>>>>v time = 0
>>>>>v randomSeed = 0
>>>>>v useAutoRandomSeed = True
>>>>>v proceduralSimulationSupported = False
>>>>>v main = UnityEngine.ParticleSystem+MainModule
>>>>>v emission = UnityEngine.ParticleSystem+EmissionModule
>>>>>v shape = UnityEngine.ParticleSystem+ShapeModule
>>>>>v velocityOverLifetime = UnityEngine.ParticleSystem+VelocityOverLifetimeModule
>>>>>v limitVelocityOverLifetime = UnityEngine.ParticleSystem+LimitVelocityOverLifetimeModule
>>>>>v inheritVelocity = UnityEngine.ParticleSystem+InheritVelocityModule
>>>>>v forceOverLifetime = UnityEngine.ParticleSystem+ForceOverLifetimeModule
>>>>>v colorOverLifetime = UnityEngine.ParticleSystem+ColorOverLifetimeModule
>>>>>v colorBySpeed = UnityEngine.ParticleSystem+ColorBySpeedModule
>>>>>v sizeOverLifetime = UnityEngine.ParticleSystem+SizeOverLifetimeModule
>>>>>v sizeBySpeed = UnityEngine.ParticleSystem+SizeBySpeedModule
>>>>>v rotationOverLifetime = UnityEngine.ParticleSystem+RotationOverLifetimeModule
>>>>>v rotationBySpeed = UnityEngine.ParticleSystem+RotationBySpeedModule
>>>>>v externalForces = UnityEngine.ParticleSystem+ExternalForcesModule
>>>>>v noise = UnityEngine.ParticleSystem+NoiseModule
>>>>>v collision = UnityEngine.ParticleSystem+CollisionModule
>>>>>v trigger = UnityEngine.ParticleSystem+TriggerModule
>>>>>v subEmitters = UnityEngine.ParticleSystem+SubEmittersModule
>>>>>v textureSheetAnimation = UnityEngine.ParticleSystem+TextureSheetAnimationModule
>>>>>v lights = UnityEngine.ParticleSystem+LightsModule
>>>>>v trails = UnityEngine.ParticleSystem+TrailModule
>>>>>v customData = UnityEngine.ParticleSystem+CustomDataModule

>>>>> UnityEngine.ParticleSystemRenderer
>>>>>v alignment = View
>>>>>v renderMode = Stretch
>>>>>v sortMode = None
>>>>>v lengthScale = 2
>>>>>v velocityScale = 0
>>>>>v cameraVelocityScale = 0
>>>>>v normalDirection = 1
>>>>>v shadowBias = 0
>>>>>v sortingFudge = 0
>>>>>v minParticleSize = 0
>>>>>v maxParticleSize = 0,5
>>>>>v pivot = (0.0, 0.0, 0.0)
>>>>>v flip = (0.0, 0.0, 0.0)
>>>>>v maskInteraction = None
>>>>>v trailMaterial = 
>>>>>v enableGPUInstancing = True
>>>>>v allowRoll = True
>>>>>v mesh = 
>>>>>v meshCount = 0
>>>>>v activeVertexStreamsCount = 4

>>>>GameObject Children 1 Smoke, Point

>>>>> transform = p: (0.0, 0.0, 0.0) r: (351.6, 61.1, 300.7) s: (1.0, 1.0, 1.0)
>>>>> UnityEngine.ParticleSystem
>>>>>v startDelay = 0
>>>>>v loop = True
>>>>>v playOnAwake = True
>>>>>v duration = 2
>>>>>v playbackSpeed = 1
>>>>>v enableEmission = True
>>>>>v emissionRate = 9
>>>>>v startSpeed = 1,25
>>>>>v startSize = 0,5
>>>>>v startColor = RGBA(0.632, 0.632, 0.632, 1.000)
>>>>>v startRotation = 6,283185
>>>>>v startRotation3D = (0.0, 0.0, 6.3)
>>>>>v startLifetime = 2
>>>>>v gravityModifier = -0,03
>>>>>v maxParticles = 1000
>>>>>v simulationSpace = Local
>>>>>v scalingMode = Local
>>>>>v automaticCullingEnabled = True
>>>>>v isPlaying = False
>>>>>v isEmitting = False
>>>>>v isStopped = True
>>>>>v isPaused = False
>>>>>v particleCount = 0
>>>>>v time = 0
>>>>>v randomSeed = 0
>>>>>v useAutoRandomSeed = True
>>>>>v proceduralSimulationSupported = True
>>>>>v main = UnityEngine.ParticleSystem+MainModule
>>>>>v emission = UnityEngine.ParticleSystem+EmissionModule
>>>>>v shape = UnityEngine.ParticleSystem+ShapeModule
>>>>>v velocityOverLifetime = UnityEngine.ParticleSystem+VelocityOverLifetimeModule
>>>>>v limitVelocityOverLifetime = UnityEngine.ParticleSystem+LimitVelocityOverLifetimeModule
>>>>>v inheritVelocity = UnityEngine.ParticleSystem+InheritVelocityModule
>>>>>v forceOverLifetime = UnityEngine.ParticleSystem+ForceOverLifetimeModule
>>>>>v colorOverLifetime = UnityEngine.ParticleSystem+ColorOverLifetimeModule
>>>>>v colorBySpeed = UnityEngine.ParticleSystem+ColorBySpeedModule
>>>>>v sizeOverLifetime = UnityEngine.ParticleSystem+SizeOverLifetimeModule
>>>>>v sizeBySpeed = UnityEngine.ParticleSystem+SizeBySpeedModule
>>>>>v rotationOverLifetime = UnityEngine.ParticleSystem+RotationOverLifetimeModule
>>>>>v rotationBySpeed = UnityEngine.ParticleSystem+RotationBySpeedModule
>>>>>v externalForces = UnityEngine.ParticleSystem+ExternalForcesModule
>>>>>v noise = UnityEngine.ParticleSystem+NoiseModule
>>>>>v collision = UnityEngine.ParticleSystem+CollisionModule
>>>>>v trigger = UnityEngine.ParticleSystem+TriggerModule
>>>>>v subEmitters = UnityEngine.ParticleSystem+SubEmittersModule
>>>>>v textureSheetAnimation = UnityEngine.ParticleSystem+TextureSheetAnimationModule
>>>>>v lights = UnityEngine.ParticleSystem+LightsModule
>>>>>v trails = UnityEngine.ParticleSystem+TrailModule
>>>>>v customData = UnityEngine.ParticleSystem+CustomDataModule

>>>>> UnityEngine.ParticleSystemRenderer
>>>>>v alignment = View
>>>>>v renderMode = Billboard
>>>>>v sortMode = None
>>>>>v lengthScale = 11,69
>>>>>v velocityScale = 1
>>>>>v cameraVelocityScale = 0
>>>>>v normalDirection = 1
>>>>>v shadowBias = 0
>>>>>v sortingFudge = 0
>>>>>v minParticleSize = 0
>>>>>v maxParticleSize = 0,5
>>>>>v pivot = (0.0, 0.0, 0.0)
>>>>>v flip = (0.0, 0.0, 0.0)
>>>>>v maskInteraction = None
>>>>>v trailMaterial = 
>>>>>v enableGPUInstancing = True
>>>>>v allowRoll = True
>>>>>v mesh = 
>>>>>v meshCount = 0
>>>>>v activeVertexStreamsCount = 4

>GameObject Children 1 HologramPivot

>> transform = p: (0.0, 1.0, 0.0) r: (0.0, 0.0, 0.0) s: (1.0, 1.0, 1.0)