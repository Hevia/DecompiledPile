Key Path : RoR2/Base/LaserTurbine/LaserTurbineController.prefab | UnityObject Type : UnityEngine.GameObject | UnityObject Name : LaserTurbineController

> transform = p: (0.0, 0.0, 0.0) r: (0.0, 0.0, 0.0) s: (1.0, 1.0, 1.0)
> UnityEngine.Networking.NetworkIdentity
>v m_SceneId = 0
>v m_AssetId = bfba6e51566cdb5419002a0035f60af7
>v m_ServerOnly = False
>v m_LocalPlayerAuthority = True
>v m_IsClient = False
>v m_IsServer = False
>v m_HasAuthority = False
>v m_NetId = 0
>v m_IsLocalPlayer = False
>v m_ConnectionToServer = 
>v m_ConnectionToClient = 
>v m_PlayerId = -1
>v m_NetworkBehaviours = 
>v m_ObserverConnections = 
>v m_Observers = 
>v m_ClientAuthorityOwner = 
>v m_Reset = False
>v s_NextNetworkId = 1
>v s_UpdateWriter = UnityEngine.Networking.NetworkWriter
>v clientAuthorityCallback = 
>v onNetworkIdAssigned = 
>v onStartServerGlobal = 
>v isClient = False
>v isServer = False
>v hasAuthority = False
>v netId = 0
>v sceneId = 0
>v serverOnly = False
>v localPlayerAuthority = True
>v clientAuthorityOwner = 
>v assetId = bfba6e51566cdb5419002a0035f60af7
>v isLocalPlayer = False
>v playerControllerId = -1
>v connectionToServer = 
>v connectionToClient = 
>v observers = 

> RoR2.NetworkStateMachine
>v stateMachines = RoR2.EntityStateMachine[]
>v networkIdentity = 

> RoR2.EntityStateMachine
>v <state>k__BackingField = 
>v nextState = 
>v customName = Main
>v initialStateType = EntityStates.SerializableEntityStateType
>v mainStateType = EntityStates.SerializableEntityStateType
>v <networker>k__BackingField = 
>v <networkIdentity>k__BackingField = 
>v commonComponents = RoR2.EntityStateMachine+CommonComponentCache
>v networkIndex = -1
>v nextStateModifier = 
>v <destroying>k__BackingField = False
>v state = 
>v networker = 
>v networkIdentity = 
>v destroying = False

> RoR2.GenericOwnership
>v onOwnerChanged = 
>v ownerInstanceId = 0
>v cachedOwnerObject = 
>v ownerObject = 
>v NetworkownerInstanceId = 0

> RoR2.NetworkedBodyAttachment
>v _attachedBodyObject = 
>v attachedBodyChildName = 
>v <attachedBody>k__BackingField = 
>v shouldParentToAttachedBody = False
>v forceHostAuthority = False
>v <hasEffectiveAuthority>k__BackingField = False
>v networkIdentity = 
>v attached = False
>v ____attachedBodyObjectNetId = 0
>v attachedBodyObject = 
>v attachedBody = 
>v hasEffectiveAuthority = False
>v Network_attachedBodyObject = 
>v NetworkattachedBodyChildName = 

> RoR2.LaserTurbineController
>v visualSpinRate = 7200
>v chargeIndicator = ChargeIndicator (UnityEngine.Transform)
>v spinIndicator = Axis (UnityEngine.Transform)
>v turbineDisplayRoot = TurbineContainer (UnityEngine.Transform)
>v showTurbineDisplay = True
>v spinRtpc = item_laserTurbine_charge
>v spinRtpcScale = 100
>v visualSpin = 0
>v visualSpinDecayRate = 0,2
>v genericOwnership = 
>v <charge>k__BackingField = 0
>v cachedOwnerBody = 
>v charge = 0

> UnityEngine.Rigidbody
>v velocity = (0.0, 0.0, 0.0)
>v angularVelocity = (0.0, 0.0, 0.0)
>v drag = 0
>v angularDrag = 0,05
>v mass = 1
>v useGravity = False
>v maxDepenetrationVelocity = 1E+32
>v isKinematic = True
>v freezeRotation = False
>v constraints = None
>v collisionDetectionMode = Discrete
>v centerOfMass = (0.0, 0.0, 0.0)
>v worldCenterOfMass = (0.0, 0.0, 0.0)
>v inertiaTensorRotation = (0.0, 0.0, 0.0, 1.0)
>v inertiaTensor = (1.0, 1.0, 1.0)
>v detectCollisions = True
>v position = (0.0, 0.0, 0.0)
>v rotation = (0.0, 0.0, 0.0, 1.0)
>v interpolation = Interpolate
>v solverIterations = 6
>v sleepThreshold = 0,005
>v maxAngularVelocity = 7
>v solverVelocityIterations = 1
>v sleepVelocity = 0
>v sleepAngularVelocity = 0
>v useConeFriction = False
>v solverIterationCount = 6
>v solverVelocityIterationCount = 1

> RoR2.SimpleLeash
>v minLeashRadius = 1
>v maxLeashRadius = 20
>v maxFollowSpeed = 40
>v smoothTime = 0,15
>v transform = 
>v networkIdentity = 
>v <leashOrigin>k__BackingField = (0.0, 0.0, 0.0)
>v velocity = (0.0, 0.0, 0.0)
>v isNetworkControlled = False
>v leashOrigin = (0.0, 0.0, 0.0)

> RoR2.SimpleRotateToDirection
>v smoothTime = 0,1
>v maxRotationSpeed = 720
>v transform = 
>v networkIdentity = 
>v <targetRotation>k__BackingField = (0.0, 0.0, 0.0, 0.0)
>v velocity = 0
>v isNetworkControlled = False
>v targetRotation = (0.0, 0.0, 0.0, 0.0)

> RoR2.Networking.CharacterNetworkTransform
>v instancesList = System.Collections.Generic.List`1[RoR2.Networking.CharacterNetworkTransform]
>v _readOnlyInstancesList = System.Collections.ObjectModel.ReadOnlyCollection`1[RoR2.Networking.CharacterNetworkTransform]
>v <transform>k__BackingField = 
>v <inputBank>k__BackingField = 
>v <characterMotor>k__BackingField = 
>v <characterDirection>k__BackingField = 
>v <rigidbody>k__BackingField = 
>v positionTransmitInterval = 0,1
>v lastPositionTransmitTime = -Infini
>v interpolationFactor = 2
>v newestNetSnapshot = RoR2.Networking.CharacterNetworkTransform+Snapshot
>v snapshots = System.Collections.Generic.List`1[RoR2.Networking.CharacterNetworkTransform+Snapshot]
>v debugDuplicatePositions = False
>v debugSnapshotReceived = False
>v rigidbodyStartedKinematic = True
>v <hasEffectiveAuthority>k__BackingField = False
>v readOnlyInstancesList = System.Collections.ObjectModel.ReadOnlyCollection`1[RoR2.Networking.CharacterNetworkTransform]
>v transform = 
>v inputBank = 
>v characterMotor = 
>v characterDirection = 
>v interpolationDelay = 0,2
>v hasEffectiveAuthority = False

> AkGameObj
>v m_listeners = AkGameObjListenerList
>v isEnvironmentAware = True
>v isStaticObject = False
>v m_Collider = 
>v m_envData = 
>v m_posData = 
>v m_positionOffsetData = AkGameObjPositionOffsetData
>v isRegistered = False
>v m_posOffsetData = 
>v AK_NUM_LISTENERS = 8
>v listenerMask = 1
>v IsUsingDefaultListeners = True
>v ListenerList = System.Collections.Generic.List`1[AkAudioListener]

> AkEvent
>v actionOnEventType = AkActionOnEventType_Stop
>v curveInterpolation = AkCurveInterpolation_Linear
>v enableActionOnEvent = False
>v data = Empty Event
>v useCallbacks = False
>v Callbacks = System.Collections.Generic.List`1[AkEvent+CallbackData]
>v playingId = 0
>v soundEmitterObject = 
>v transitionDuration = 0
>v EventCallbackMsg = 
>v eventIdInternal = 0
>v valueGuidInternal = System.Byte[]
>v m_callbackDataInternal = 
>v eventID = 0
>v valueGuid = 
>v m_callbackData = 

> AkEvent
>v actionOnEventType = AkActionOnEventType_Stop
>v curveInterpolation = AkCurveInterpolation_Linear
>v enableActionOnEvent = False
>v data = Empty Event
>v useCallbacks = False
>v Callbacks = System.Collections.Generic.List`1[AkEvent+CallbackData]
>v playingId = 0
>v soundEmitterObject = 
>v transitionDuration = 0
>v EventCallbackMsg = 
>v eventIdInternal = 0
>v valueGuidInternal = System.Byte[]
>v m_callbackDataInternal = 
>v eventID = 0
>v valueGuid = 
>v m_callbackData = 

>GameObject Children 0 Holder?

>> transform = p: (0.0, 0.0, 0.0) r: (90.0, 0.0, 0.0) s: (1.0, 1.0, 1.0)
>>GameObject Children 0 TurbineContainer

>>> transform = p: (0.0, 0.2, 0.0) r: (0.0, 180.0, 180.0) s: (1.0, 1.0, 1.0)
>>>GameObject Children 0 Axis

>>>> transform = p: (0.0, 0.0, 0.0) r: (0.0, 180.0, 180.0) s: (1.2, 1.2, 1.2)
>>>>GameObject Children 0 DiskMesh

>>>>> transform = p: (0.0, 0.0, 0.0) r: (270.0, 0.0, 0.0) s: (0.3, 0.3, 0.3)
>>>>> UnityEngine.MeshFilter
>>>>>v sharedMesh = LaserDiskMesh (UnityEngine.Mesh)
>>>>>v mesh = LaserDiskMesh Instance (UnityEngine.Mesh)

>>>>> UnityEngine.MeshRenderer
>>>>>v additionalVertexStreams = 
>>>>>v subMeshStartIndex = 0

>>>>GameObject Children 1 Quad

>>>>> transform = p: (0.0, 0.0, 0.0) r: (90.0, 0.0, 0.0) s: (2.0, 2.0, 2.0)
>>>>> UnityEngine.MeshFilter
>>>>>v sharedMesh = Quad (UnityEngine.Mesh)
>>>>>v mesh = Quad Instance (UnityEngine.Mesh)

>>>>> UnityEngine.MeshRenderer
>>>>>v additionalVertexStreams = 
>>>>>v subMeshStartIndex = 0

>>>>GameObject Children 2 ChargeIndicator

>>>>> transform = p: (0.0, 0.0, 0.0) r: (90.0, 0.0, 0.0) s: (1.0, 1.0, 1.0)
>>>>> UnityEngine.MeshFilter
>>>>>v sharedMesh = Quad (UnityEngine.Mesh)
>>>>>v mesh = Quad Instance (UnityEngine.Mesh)

>>>>> UnityEngine.MeshRenderer
>>>>>v additionalVertexStreams = 
>>>>>v subMeshStartIndex = 0
