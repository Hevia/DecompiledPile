Key Path : RoR2/Base/MonstersOnShrineUse/MonstersOnShrineUseEncounter.prefab | UnityObject Type : UnityEngine.GameObject | UnityObject Name : MonstersOnShrineUseEncounter

> transform = p: (0.0, 0.0, 0.0) r: (0.0, 0.0, 0.0) s: (1.0, 1.0, 1.0)
> UnityEngine.Networking.NetworkIdentity
>v m_SceneId = 0
>v m_AssetId = 5f8ad075e0ba2e54abf09ed2e14461fa
>v m_ServerOnly = False
>v m_LocalPlayerAuthority = False
>v m_IsClient = False
>v m_IsServer = False
>v m_HasAuthority = False
>v m_NetId = 0
>v m_IsLocalPlayer = False
>v m_ConnectionToServer = 
>v m_ConnectionToClient = 
>v m_PlayerId = -1
>v m_NetworkBehaviours = 
>v m_ObserverConnections = 
>v m_Observers = 
>v m_ClientAuthorityOwner = 
>v m_Reset = False
>v s_NextNetworkId = 1
>v s_UpdateWriter = UnityEngine.Networking.NetworkWriter
>v clientAuthorityCallback = 
>v onNetworkIdAssigned = 
>v onStartServerGlobal = 
>v isClient = False
>v isServer = False
>v hasAuthority = False
>v netId = 0
>v sceneId = 0
>v serverOnly = False
>v localPlayerAuthority = False
>v clientAuthorityOwner = 
>v assetId = 5f8ad075e0ba2e54abf09ed2e14461fa
>v isLocalPlayer = False
>v playerControllerId = -1
>v connectionToServer = 
>v connectionToClient = 
>v observers = 

> RoR2.CombatSquad
>v membersList = System.Collections.Generic.List`1[RoR2.CharacterMaster]
>v memberHistory = System.Collections.Generic.List`1[UnityEngine.Networking.NetworkInstanceId]
>v <readOnlyMembersList>k__BackingField = 
>v propagateMembershipToSummons = False
>v grantBonusHealthInMultiplayer = True
>v onDestroyCallbacksServer = 
>v defeatedServer = False
>v membersListDirtyBit = 1
>v allDirtyBits = 1
>v awakeTime = RoR2.Run+FixedTimeStamp
>v onDefeatedServer = 
>v onDefeatedServerLogicEvent = UnityEngine.Events.UnityEvent UnityEngine.Events.UnityEvent
>v onMemberDeathServer = 
>v onMemberDefeatedServer = 
>v onMemberAddedServer = 
>v onMemberDiscovered = 
>v onMemberLost = 
>v readOnlyMembersList = 
>v memberCount = 0

> RoR2.CombatDirector
>v customName = 
>v monsterCredit = 0
>v expRewardCoefficient = 0,2
>v goldRewardCoefficient = 1
>v minSeriesSpawnInterval = 0,5
>v maxSeriesSpawnInterval = 0,5
>v minRerollSpawnInterval = 0,1
>v maxRerollSpawnInterval = 0,1
>v moneyWaveIntervals = RoR2.RangeFloat[]
>v teamIndex = Monster
>v creditMultiplier = 1
>v spawnDistanceMultiplier = 1
>v maxSpawnDistance = +Infini
>v minSpawnRange = 0
>v shouldSpawnOneWave = True
>v targetPlayers = False
>v skipSpawnIfTooCheap = False
>v resetMonsterCardIfFailed = True
>v maximumNumberToSpawnBeforeSkipping = 6
>v eliteBias = 1
>v onSpawnedServer = RoR2.CombatDirector+OnSpawnedServer RoR2.CombatDirector+OnSpawnedServer
>v combatSquad = MonstersOnShrineUseEncounter (RoR2.CombatSquad)
>v spawnEffectPrefab = MonstersOnShrineUseSpawnEffect (UnityEngine.GameObject)
>v ignoreTeamSizeLimit = False
>v _monsterCards = 
>v fallBackToStageMonsterCards = True
>v <monsterSpawnTimer>k__BackingField = 0
>v <lastAttemptedMonsterCard>k__BackingField = 
>v <totalCreditsSpent>k__BackingField = 0
>v instancesList = System.Collections.Generic.List`1[RoR2.CombatDirector]
>v hasStartedWave = False
>v rng = 
>v currentMonsterCard = 
>v currentActiveEliteTier = 
>v currentActiveEliteDef = 
>v currentMonsterCardCost = 0
>v monsterCardsSelection = 
>v currentSpawnTarget = MonstersOnShrineUseEncounter (UnityEngine.GameObject)
>v playerRetargetTimer = 0
>v baseEliteCostMultiplier = 6
>v eliteTiers = RoR2.CombatDirector+EliteTierDef[]
>v spawnCountInCurrentWave = 0
>v cvDirectorCombatDisable = RoR2.ConVar.BoolConVar
>v cvDirectorCombatEnableInternalLogs = RoR2.ConVar.BoolConVar
>v moneyWaves = 
>v monsterSpawnTimer = 0
>v lastAttemptedMonsterCard = 
>v totalCreditsSpent = 0
>v lowestEliteCostMultiplier = 6

> UnityEngine.Rigidbody
>v velocity = (0.0, 0.0, 0.0)
>v angularVelocity = (0.0, 0.0, 0.0)
>v drag = 0
>v angularDrag = 0,05
>v mass = 1
>v useGravity = False
>v maxDepenetrationVelocity = 1E+32
>v isKinematic = True
>v freezeRotation = False
>v constraints = None
>v collisionDetectionMode = Discrete
>v centerOfMass = (0.0, 0.0, 0.0)
>v worldCenterOfMass = (0.0, 0.0, 0.0)
>v inertiaTensorRotation = (0.0, 0.0, 0.0, 1.0)
>v inertiaTensor = (1.0, 1.0, 1.0)
>v detectCollisions = True
>v position = (0.0, 0.0, 0.0)
>v rotation = (0.0, 0.0, 0.0, 1.0)
>v interpolation = None
>v solverIterations = 6
>v sleepThreshold = 0,005
>v maxAngularVelocity = 7
>v solverVelocityIterations = 1
>v sleepVelocity = 0
>v sleepAngularVelocity = 0
>v useConeFriction = False
>v solverIterationCount = 6
>v solverVelocityIterationCount = 1

> AkGameObj
>v m_listeners = AkGameObjListenerList
>v isEnvironmentAware = True
>v isStaticObject = False
>v m_Collider = 
>v m_envData = 
>v m_posData = 
>v m_positionOffsetData = AkGameObjPositionOffsetData
>v isRegistered = False
>v m_posOffsetData = 
>v AK_NUM_LISTENERS = 8
>v listenerMask = 1
>v IsUsingDefaultListeners = True
>v ListenerList = System.Collections.Generic.List`1[AkAudioListener]

> AkEvent
>v actionOnEventType = AkActionOnEventType_Stop
>v curveInterpolation = AkCurveInterpolation_Linear
>v enableActionOnEvent = False
>v data = Play_monstersOnShrineUse_activate
>v useCallbacks = False
>v Callbacks = System.Collections.Generic.List`1[AkEvent+CallbackData]
>v playingId = 0
>v soundEmitterObject = 
>v transitionDuration = 0
>v EventCallbackMsg = 
>v eventIdInternal = 0
>v valueGuidInternal = System.Byte[]
>v m_callbackDataInternal = 
>v eventID = 1435808974
>v valueGuid = System.Byte[]
>v m_callbackData = 
