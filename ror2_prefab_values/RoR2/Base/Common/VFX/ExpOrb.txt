Key Path : RoR2/Base/Common/VFX/ExpOrb.prefab | UnityObject Type : UnityEngine.GameObject | UnityObject Name : ExpOrb

> transform = p: (0.0, 0.0, 0.0) r: (0.0, 0.0, 0.0) s: (1.0, 1.0, 1.0)
> UnityEngine.TrailRenderer
>v numPositions = 0
>v time = 0,2
>v startWidth = 0,04267516
>v endWidth = 0,03184713
>v widthMultiplier = 1
>v autodestruct = False
>v emitting = True
>v numCornerVertices = 0
>v numCapVertices = 0
>v minVertexDistance = 0,1
>v startColor = RGBA(0.000, 0.875, 1.000, 0.608)
>v endColor = RGBA(0.016, 0.067, 1.000, 0.000)
>v positionCount = 0
>v shadowBias = 0
>v generateLightingData = False
>v textureMode = Stretch
>v alignment = View
>v widthCurve = UnityEngine.AnimationCurve
>v colorGradient = UnityEngine.Gradient

> UnityEngine.ParticleSystemRenderer
>v alignment = View
>v renderMode = Billboard
>v sortMode = None
>v lengthScale = 2
>v velocityScale = 0
>v cameraVelocityScale = 0
>v normalDirection = 1
>v shadowBias = 0
>v sortingFudge = 0
>v minParticleSize = 0
>v maxParticleSize = 0,5
>v pivot = (0.0, 0.0, 0.0)
>v flip = (0.0, 0.0, 0.0)
>v maskInteraction = None
>v trailMaterial = 
>v enableGPUInstancing = False
>v allowRoll = True
>v mesh = 
>v meshCount = 0
>v activeVertexStreamsCount = 5

> UnityEngine.ParticleSystem
>v startDelay = 0
>v loop = True
>v playOnAwake = True
>v duration = 5
>v playbackSpeed = 1
>v enableEmission = True
>v emissionRate = 4
>v startSpeed = 0
>v startSize = 0,25
>v startColor = RGBA(1.000, 1.000, 1.000, 1.000)
>v startRotation = 0
>v startRotation3D = (0.0, 0.0, 0.0)
>v startLifetime = 1
>v gravityModifier = 0
>v maxParticles = 10
>v simulationSpace = Local
>v scalingMode = Local
>v automaticCullingEnabled = True
>v isPlaying = False
>v isEmitting = False
>v isStopped = True
>v isPaused = False
>v particleCount = 0
>v time = 0
>v randomSeed = 0
>v useAutoRandomSeed = True
>v proceduralSimulationSupported = True
>v main = UnityEngine.ParticleSystem+MainModule
>v emission = UnityEngine.ParticleSystem+EmissionModule
>v shape = UnityEngine.ParticleSystem+ShapeModule
>v velocityOverLifetime = UnityEngine.ParticleSystem+VelocityOverLifetimeModule
>v limitVelocityOverLifetime = UnityEngine.ParticleSystem+LimitVelocityOverLifetimeModule
>v inheritVelocity = UnityEngine.ParticleSystem+InheritVelocityModule
>v forceOverLifetime = UnityEngine.ParticleSystem+ForceOverLifetimeModule
>v colorOverLifetime = UnityEngine.ParticleSystem+ColorOverLifetimeModule
>v colorBySpeed = UnityEngine.ParticleSystem+ColorBySpeedModule
>v sizeOverLifetime = UnityEngine.ParticleSystem+SizeOverLifetimeModule
>v sizeBySpeed = UnityEngine.ParticleSystem+SizeBySpeedModule
>v rotationOverLifetime = UnityEngine.ParticleSystem+RotationOverLifetimeModule
>v rotationBySpeed = UnityEngine.ParticleSystem+RotationBySpeedModule
>v externalForces = UnityEngine.ParticleSystem+ExternalForcesModule
>v noise = UnityEngine.ParticleSystem+NoiseModule
>v collision = UnityEngine.ParticleSystem+CollisionModule
>v trigger = UnityEngine.ParticleSystem+TriggerModule
>v subEmitters = UnityEngine.ParticleSystem+SubEmittersModule
>v textureSheetAnimation = UnityEngine.ParticleSystem+TextureSheetAnimationModule
>v lights = UnityEngine.ParticleSystem+LightsModule
>v trails = UnityEngine.ParticleSystem+TrailModule
>v customData = UnityEngine.ParticleSystem+CustomDataModule

> UnityEngine.SphereCollider
>v center = (0.0, 0.0, 0.0)
>v radius = 0,1

> RoR2.ExperienceOrbBehavior
>v hitEffectPrefab = ExpHit (UnityEngine.GameObject)
>v transform = 
>v trail = 
>v light = 
>v <targetTransform>k__BackingField = 
>v <travelTime>k__BackingField = 0
>v <exp>k__BackingField = 0
>v localTime = 0
>v startPos = (0.0, 0.0, 0.0)
>v previousPos = (0.0, 0.0, 0.0)
>v initialVelocity = (0.0, 0.0, 0.0)
>v scale = 0
>v consumed = False
>v expSoundString = Play_UI_xp_gain
>v targetTransform = 
>v travelTime = 0
>v exp = 0

> RoR2.VFXAttributes
>v vfxList = System.Collections.Generic.List`1[RoR2.VFXAttributes]
>v _readonlyVFXList = System.Collections.ObjectModel.ReadOnlyCollection`1[RoR2.VFXAttributes]
>v vfxPriority = Medium
>v vfxIntensity = Low
>v optionalLights = UnityEngine.Light[]
>v secondaryParticleSystem = UnityEngine.ParticleSystem[]
>v readonlyVFXList = System.Collections.ObjectModel.ReadOnlyCollection`1[RoR2.VFXAttributes]
