Key Path : RoR2/Base/Common/VFX/ItemTakenOrbEffect.prefab | UnityObject Type : UnityEngine.GameObject | UnityObject Name : ItemTakenOrbEffect

> transform = p: (-0.4, 0.0, -9.9) r: (0.0, 0.0, 0.0) s: (1.0, 1.0, 1.0)
> RoR2.EffectComponent
>v effectIndex = 253
>v effectData = 
>v positionAtReferencedTransform = False
>v parentToReferencedTransform = False
>v applyScale = False
>v soundName = 
>v disregardZScale = False
>v didResolveReferencedObject = False
>v referencedObject = 
>v didResolveReferencedChildTransform = False
>v referencedChildTransform = 
>v didResolveReferencedHurtBox = False
>v referencedHurtBoxGameObject = 

> RoR2.Orbs.OrbEffect
>v targetTransform = 
>v duration = 0
>v startPosition = (0.0, 0.0, 0.0)
>v previousPosition = (0.0, 0.0, 0.0)
>v lastKnownTargetPosition = (0.0, 0.0, 0.0)
>v age = 0
>v parentObjectTransform = 
>v startVelocity1 = (0.0, 0.0, 0.0)
>v startVelocity2 = (0.0, 0.0, 0.0)
>v endVelocity1 = (-8.0, 5.0, -8.0)
>v endVelocity2 = (8.0, 20.0, 8.0)
>v startVelocity = (0.0, 0.0, 0.0)
>v endVelocity = (0.0, 0.0, 0.0)
>v movementCurve = UnityEngine.AnimationCurve
>v bezierCurveLine = 
>v faceMovement = False
>v callArrivalIfTargetIsGone = False
>v startEffect = 
>v startEffectScale = 1
>v startEffectCopiesRotation = False
>v endEffect = 
>v endEffectScale = 1
>v endEffectCopiesRotation = False
>v onArrival = UnityEngine.Events.UnityEvent UnityEngine.Events.UnityEvent

> UnityEngine.Rigidbody
>v velocity = (0.0, 0.0, 0.0)
>v angularVelocity = (0.0, 0.0, 0.0)
>v drag = 0
>v angularDrag = 0,05
>v mass = 1
>v useGravity = False
>v maxDepenetrationVelocity = 1E+32
>v isKinematic = True
>v freezeRotation = False
>v constraints = None
>v collisionDetectionMode = Discrete
>v centerOfMass = (0.0, 0.0, 0.0)
>v worldCenterOfMass = (0.0, 0.0, 0.0)
>v inertiaTensorRotation = (0.0, 0.0, 0.0, 1.0)
>v inertiaTensor = (1.0, 1.0, 1.0)
>v detectCollisions = True
>v position = (0.0, 0.0, 0.0)
>v rotation = (0.0, 0.0, 0.0, 1.0)
>v interpolation = None
>v solverIterations = 6
>v sleepThreshold = 0,005
>v maxAngularVelocity = 7
>v solverVelocityIterations = 1
>v sleepVelocity = 0
>v sleepAngularVelocity = 0
>v useConeFriction = False
>v solverIterationCount = 6
>v solverVelocityIterationCount = 1

> RoR2.VFXAttributes
>v vfxList = System.Collections.Generic.List`1[RoR2.VFXAttributes]
>v _readonlyVFXList = System.Collections.ObjectModel.ReadOnlyCollection`1[RoR2.VFXAttributes]
>v vfxPriority = Always
>v vfxIntensity = Medium
>v optionalLights = UnityEngine.Light[]
>v secondaryParticleSystem = UnityEngine.ParticleSystem[]
>v readonlyVFXList = System.Collections.ObjectModel.ReadOnlyCollection`1[RoR2.VFXAttributes]

> RoR2.Orbs.ItemTakenOrbEffect
>v trailToColor = VFX (UnityEngine.TrailRenderer)
>v particlesToColor = UnityEngine.ParticleSystem[]
>v spritesToColor = UnityEngine.SpriteRenderer[]
>v iconSpriteRenderer = PickupSprite (UnityEngine.SpriteRenderer)

> AkGameObj
>v m_listeners = AkGameObjListenerList
>v isEnvironmentAware = True
>v isStaticObject = False
>v m_Collider = 
>v m_envData = 
>v m_posData = 
>v m_positionOffsetData = AkGameObjPositionOffsetData
>v isRegistered = False
>v m_posOffsetData = 
>v AK_NUM_LISTENERS = 8
>v listenerMask = 1
>v IsUsingDefaultListeners = True
>v ListenerList = System.Collections.Generic.List`1[AkAudioListener]

> AkEvent
>v actionOnEventType = AkActionOnEventType_Stop
>v curveInterpolation = AkCurveInterpolation_Linear
>v enableActionOnEvent = False
>v data = Play_UI_3D_printer_selectItem
>v useCallbacks = False
>v Callbacks = System.Collections.Generic.List`1[AkEvent+CallbackData]
>v playingId = 0
>v soundEmitterObject = 
>v transitionDuration = 0
>v EventCallbackMsg = 
>v eventIdInternal = 0
>v valueGuidInternal = System.Byte[]
>v m_callbackDataInternal = 
>v eventID = -1407439261
>v valueGuid = System.Byte[]
>v m_callbackData = 

>GameObject Children 0 VFX

>> transform = p: (0.0, 0.0, 0.0) r: (0.0, 0.0, 0.0) s: (1.0, 1.0, 1.0)
>> UnityEngine.TrailRenderer
>>v numPositions = 0
>>v time = 0,25
>>v startWidth = 0,06962025
>>v endWidth = 0
>>v widthMultiplier = 0,1
>>v autodestruct = False
>>v emitting = True
>>v numCornerVertices = 0
>>v numCapVertices = 0
>>v minVertexDistance = 0,03
>>v startColor = RGBA(1.000, 1.000, 1.000, 1.000)
>>v endColor = RGBA(0.592, 0.741, 0.169, 0.000)
>>v positionCount = 0
>>v shadowBias = 0
>>v generateLightingData = False
>>v textureMode = Tile
>>v alignment = View
>>v widthCurve = UnityEngine.AnimationCurve
>>v colorGradient = UnityEngine.Gradient

>>GameObject Children 0 BillboardBase

>>> transform = p: (0.0, 0.0, 0.0) r: (0.0, 0.0, 0.0) s: (0.1, 0.1, 0.1)
>>> RoR2.Billboard
>>>v instanceTransformsList = System.Collections.Generic.List`1[UnityEngine.Transform]

>>> RoR2.ScaleSpriteByCamDistance
>>>v instancesList = System.Collections.Generic.List`1[RoR2.ScaleSpriteByCamDistance]
>>>v transform = 
>>>v scaleFactor = 0,013
>>>v scalingMode = Direct

>>>GameObject Children 0 DropShadow

>>>> transform = p: (0.0, 0.0, 0.0) r: (0.0, 0.0, 0.0) s: (8.2, 8.2, 8.2)
>>>> UnityEngine.SpriteRenderer
>>>>v sprite = texUIAnimateSliceNakedButton (UnityEngine.Sprite)
>>>>v drawMode = Simple
>>>>v size = (0.1, 0.1)
>>>>v adaptiveModeThreshold = 0,5
>>>>v tileMode = Continuous
>>>>v color = RGBA(0.000, 0.000, 0.000, 0.537)
>>>>v maskInteraction = None
>>>>v flipX = False
>>>>v flipY = False
>>>>v spriteSortPoint = Center

>>>GameObject Children 1 Corners

>>>> transform = p: (0.0, 0.0, 0.0) r: (0.0, 0.0, 0.0) s: (9.2, 9.2, 5.9)
>>>> UnityEngine.SpriteRenderer
>>>>v sprite = texUIHighlightHeader (UnityEngine.Sprite)
>>>>v drawMode = Simple
>>>>v size = (1.0, 1.0)
>>>>v adaptiveModeThreshold = 0,5
>>>>v tileMode = Continuous
>>>>v color = RGBA(0.929, 0.941, 1.000, 1.000)
>>>>v maskInteraction = None
>>>>v flipX = False
>>>>v flipY = False
>>>>v spriteSortPoint = Center

>>>GameObject Children 2 PickupSprite

>>>> transform = p: (0.0, 0.0, 0.0) r: (0.0, 0.0, 0.0) s: (1.0, 1.0, 1.0)
>>>> UnityEngine.SpriteRenderer
>>>>v sprite = texSyringeIcon (UnityEngine.Sprite)
>>>>v drawMode = Simple
>>>>v size = (5.1, 5.1)
>>>>v adaptiveModeThreshold = 0,5
>>>>v tileMode = Continuous
>>>>v color = RGBA(1.000, 1.000, 1.000, 1.000)
>>>>v maskInteraction = None
>>>>v flipX = False
>>>>v flipY = False
>>>>v spriteSortPoint = Center
